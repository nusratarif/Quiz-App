{"ast":null,"code":"import _regeneratorRuntime from\"/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{shuffleArray}from'./utils';export var Difficulty;(function(Difficulty){Difficulty[\"EASY\"]=\"easy\";Difficulty[\"MEDIUM\"]=\"medium\";Difficulty[\"HARD\"]=\"hard\";})(Difficulty||(Difficulty={}));export var fetchQuizQuestions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(amount,difficulty){var endpoint,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:endpoint=\"https://opentdb.com/api.php?amount=\".concat(amount,\"&difficulty=\").concat(difficulty,\"&type=multiple\");_context.next=3;return fetch(endpoint);case 3:_context.next=5;return _context.sent.json();case 5:data=_context.sent;return _context.abrupt(\"return\",data.results.map(function(question){return _objectSpread(_objectSpread({},question),{},{answers:shuffleArray([].concat(_toConsumableArray(question.incorrect_answers),[question.correct_answer]))});}));case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchQuizQuestions(_x,_x2){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/src/Api.ts"],"names":["shuffleArray","Difficulty","fetchQuizQuestions","amount","difficulty","endpoint","fetch","json","data","results","map","question","answers","incorrect_answers","correct_answer"],"mappings":"gxBAAA,OAASA,YAAT,KAA6B,SAA7B,CAcA,UAAYC,CAAAA,UAAZ,C,UAAYA,U,EAAAA,U,gBAAAA,U,oBAAAA,U,mBAAAA,U,GAAAA,U,MAOZ,MAAO,IAAMC,CAAAA,kBAAkB,0FAAG,iBAAOC,MAAP,CAAuBC,UAAvB,oIACxBC,QADwB,8CACyBF,MADzB,wBAC8CC,UAD9C,yCAEJE,CAAAA,KAAK,CAACD,QAAD,CAFD,6CAEaE,IAFb,UAExBC,IAFwB,+CAGvBA,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,SAACC,QAAD,wCAEjBA,QAFiB,MAGpBC,OAAO,CAAEZ,YAAY,8BAChBW,QAAQ,CAACE,iBADO,GAElBF,QAAQ,CAACG,cAFS,GAHD,IAAjB,CAHuB,wDAAH,kBAAlBZ,CAAAA,kBAAkB,gDAAxB","sourcesContent":["import { shuffleArray } from './utils'\n\n\nexport type Question = {\n  category: string;\n  correct_answer: string;\n  difficulty: string;\n  incorrect_answers: string[];\n  question: string;\n  type: string;\n}\n\nexport type QuestionState = Question & { answers: string[] };\n\nexport enum Difficulty {\n  EASY = \"easy\",\n  MEDIUM = \"medium\",\n  HARD = \"hard\",\n}\n\n\nexport const fetchQuizQuestions = async (amount: number, difficulty: Difficulty) => {\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`; \n    const data = await (await fetch(endpoint)).json();\n    return data.results.map((question: Question) => (\n      {\n        ...question,\n        answers: shuffleArray([\n          ...question.incorrect_answers,\n           question.correct_answer\n          ])\n      }\n    )) ;\n};"]},"metadata":{},"sourceType":"module"}