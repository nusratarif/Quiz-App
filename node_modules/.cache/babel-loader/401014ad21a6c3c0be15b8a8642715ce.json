{"ast":null,"code":"import { shuffleArray } from './utils';\nexport let Difficulty;\n\n(function (Difficulty) {\n  Difficulty[\"EASY\"] = \"easy\";\n  Difficulty[\"MEDIUM\"] = \"medium\";\n  Difficulty[\"HARD\"] = \"hard\";\n})(Difficulty || (Difficulty = {}));\n\nexport const fetchQuizQuestions = async (amount, difficulty) => {\n  const endpoint = `https://opentdb.com/api.php?amount=10&type=multiple`;\n  const data = await (await fetch(endpoint)).json();\n  return data.result.map(question => ({ ...question,\n    answer: shuffleArray([...question.incorrect_answer, question.correct_answer])\n  }));\n};","map":{"version":3,"sources":["/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/src/Api.ts"],"names":["shuffleArray","Difficulty","fetchQuizQuestions","amount","difficulty","endpoint","data","fetch","json","result","map","question","answer","incorrect_answer","correct_answer"],"mappings":"AAAA,SAASA,YAAT,QAA6B,SAA7B;AAcA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAOZ,OAAO,MAAMC,kBAAkB,GAAG,OAAOC,MAAP,EAAuBC,UAAvB,KAAkD;AAChF,QAAMC,QAAQ,GAAI,qDAAlB;AACA,QAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAnB;AACA,SAAOF,IAAI,CAACG,MAAL,CAAYC,GAAZ,CAAiBC,QAAD,KACrB,EACE,GAAGA,QADL;AAEEC,IAAAA,MAAM,EAAEZ,YAAY,CAAC,CACnB,GAAGW,QAAQ,CAACE,gBADO,EAElBF,QAAQ,CAACG,cAFS,CAAD;AAFtB,GADqB,CAAhB,CAAP;AASH,CAZM","sourcesContent":["import { shuffleArray } from './utils'\n\n\nexport type Question = {\n  category: string;\n  correct_answer: string;\n  difficulty: string;\n  incorrect_answer: string[];\n  question: string;\n  type: string;\n}\n\nexport type QuestionState = Question & { answer: string[] };\n\nexport enum Difficulty {\n  EASY = \"easy\",\n  MEDIUM = \"medium\",\n  HARD = \"hard\",\n}\n\n\nexport const fetchQuizQuestions = async (amount: number, difficulty: Difficulty) => {\n    const endpoint = `https://opentdb.com/api.php?amount=10&type=multiple`; \n    const data = await (await fetch(endpoint)).json();\n    return data.result.map((question: Question) => (\n      {\n        ...question,\n        answer: shuffleArray([\n          ...question.incorrect_answer,\n           question.correct_answer\n          ])\n      }\n    )) \n}"]},"metadata":{},"sourceType":"module"}