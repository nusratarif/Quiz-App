{"ast":null,"code":"import _toConsumableArray from\"/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useState}from'react';import QuestionCard from'./Components/QuestionCard';import{fetchQuizQuestions}from'./Api';import{Difficulty}from'./Api';import{GlobalStyle,Wrapper}from'./App.style';var TOTAL_QUESTIONS=10;var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),questions=_useState4[0],setQuestions=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),number=_useState6[0],setNumber=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),userAnswers=_useState8[0],setUserAnswers=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),score=_useState10[0],setScore=_useState10[1];var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),gameOver=_useState12[0],setGameOver=_useState12[1];console.log(fetchQuizQuestions(TOTAL_QUESTIONS,Difficulty.EASY));var startTrivia=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newQuestions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);setGameOver(false);_context.next=4;return fetchQuizQuestions(TOTAL_QUESTIONS,Difficulty.EASY);case 4:newQuestions=_context.sent;setQuestions(newQuestions);setScore(0);setUserAnswers([]);setNumber(0);setLoading(false);case 10:case\"end\":return _context.stop();}}},_callee);}));return function startTrivia(){return _ref.apply(this,arguments);};}();var checkAnswer=function checkAnswer(e){if(!gameOver){//User answer\nvar answer=e.currentTarget.value;//check answer against correct answer\nvar correct=questions[number].correct_answer===answer;//Add Score if answer is correct\nif(correct)setScore(function(prev){return prev+1;});//Save Answer in the Array for User Answers\nvar answerObject={question:questions[number].question,answer:answer,correct:correct,correctAnswer:questions[number].correct_answer};setUserAnswers(function(prev){return[].concat(_toConsumableArray(prev),[answerObject]);});}};var nextQuestion=function nextQuestion(){// Move on the next Question if not the last question\nvar nextQuestion=number+1;if(nextQuestion===TOTAL_QUESTIONS){setGameOver(true);}else{setNumber(nextQuestion);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalStyle,{}),/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"REACT QUIZ\"}),gameOver||userAnswers.length===TOTAL_QUESTIONS?/*#__PURE__*/_jsx(\"button\",{className:\"start\",onClick:startTrivia,children:\"Start\"}):null,!gameOver?/*#__PURE__*/_jsxs(\"p\",{className:\"score\",children:[\"Score: \",score]}):null,loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading Questions ...\"}),!loading&&!gameOver&&/*#__PURE__*/_jsx(QuestionCard,{questionNr:number+1,totalQuestions:TOTAL_QUESTIONS,question:questions[number].question,answers:questions[number].answers,userAnswer:userAnswers?userAnswers[number]:undefined,callback:checkAnswer}),!gameOver&&!loading&&userAnswers.length===number+1&&number!==TOTAL_QUESTIONS-1?/*#__PURE__*/_jsx(\"button\",{className:\"next\",onClick:nextQuestion,children:\"Next Question\"}):null]})]});};export default App;","map":{"version":3,"sources":["/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/src/App.tsx"],"names":["React","useState","QuestionCard","fetchQuizQuestions","Difficulty","GlobalStyle","Wrapper","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","console","log","EASY","startTrivia","newQuestions","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","prev","answerObject","question","correctAnswer","nextQuestion","length","answers","undefined"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport QuestionCard from './Components/QuestionCard';\nimport { fetchQuizQuestions } from './Api';\nimport { QuestionState, Difficulty } from './Api';\nimport { GlobalStyle, Wrapper} from './App.style';\n\n\nexport type AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n}\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n   const [loading, setLoading] = useState(false);\n   const [questions, setQuestions] = useState<QuestionState[]>([]);\n   const [number, setNumber] = useState(0);\n   const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n   const [score, setScore] = useState(0);\n   const [gameOver, setGameOver] = useState(true);\n\n   console.log(fetchQuizQuestions(TOTAL_QUESTIONS,Difficulty.EASY));\n   const startTrivia = async () => {\n        setLoading(true);\n        setGameOver(false);\n  \n   const newQuestions = await fetchQuizQuestions(\n     TOTAL_QUESTIONS,\n     Difficulty.EASY\n   )\n\n   setQuestions(newQuestions);\n   setScore(0);\n   setUserAnswers([]);\n   setNumber(0);\n   setLoading(false);\n  };\n   const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n        if (!gameOver) {\n          //User answer\n          const answer = e.currentTarget.value;\n          //check answer against correct answer\n          const correct = questions[number].correct_answer === answer;\n          //Add Score if answer is correct\n          if (correct) setScore(prev => prev + 1);\n          //Save Answer in the Array for User Answers\n          const answerObject = {\n            question: questions[number].question,\n            answer,\n            correct,\n            correctAnswer: questions[number].correct_answer,\n          };\n          setUserAnswers((prev) => [...prev, answerObject]);\n        }\n   };\n\n   const nextQuestion = () => {\n      // Move on the next Question if not the last question\n      const nextQuestion = number + 1;\n      if (nextQuestion === TOTAL_QUESTIONS) {\n        setGameOver(true);\n      } else {\n        setNumber(nextQuestion);\n      }\n   }\n\n\n  return (\n    <>\n    <GlobalStyle />\n    <Wrapper>\n      <h1>REACT QUIZ</h1>\n      {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n      <button className=\"start\" onClick={startTrivia}>\n        Start\n      </button>\n    ) : null}\n      {!gameOver ? <p className=\"score\">Score: {score}</p> : null}\n      {loading && <p>Loading Questions ...</p>}\n      {!loading && !gameOver &&(\n      <QuestionCard \n       questionNr={number + 1}\n       totalQuestions={TOTAL_QUESTIONS}\n       question={questions[number].question}\n       answers={questions[number].answers}\n       userAnswer={userAnswers ? userAnswers[number] : undefined}\n       callback={checkAnswer        }\n      />\n      )}\n      {!gameOver &&\n       !loading &&\n       userAnswers.length === number + 1 && \n       number !== TOTAL_QUESTIONS - 1 ? (\n      <button className=\"next\" onClick={nextQuestion}>\n        Next Question\n      </button>\n      ) : null}\n    </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}