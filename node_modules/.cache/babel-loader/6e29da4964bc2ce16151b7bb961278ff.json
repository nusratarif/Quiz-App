{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport QuestionCard from './Components/QuestionCard';\nimport { fetchQuizQuestions } from './Api';\nimport { Difficulty } from './Api';\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  console.log(fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {};\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"REACT QUIZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), gameOver || userAnswers.length === TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start\",\n      onClick: startTrivia,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: \"Score:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this) : null, loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Questions ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), !loading && !gameOver && /*#__PURE__*/_jsxDEV(QuestionCard, {\n      questionNr: number + 1,\n      totalQuestions: TOTAL_QUESTIONS,\n      question: questions[number].question,\n      answers: questions[number].answer,\n      userAnswer: userAnswers ? userAnswers[number] : undefined,\n      callback: checkAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !gameOver && !loading && userAnswers.length === number + 1, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next\",\n      onClick: nextQuestion,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3vxO9CiM0ITniaGpI+eu+AjXM9U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nusrat-arif/Nusrat Jahan CNC/REACT/REACT ASSIGNMENT/Project-6/quiz-app/src/App.tsx"],"names":["React","useState","QuestionCard","fetchQuizQuestions","Difficulty","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","console","log","EASY","startTrivia","newQuestions","checkAnswer","e","nextQuestion","length","question","answer","undefined"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport QuestionCard from './Components/QuestionCard';\nimport { fetchQuizQuestions } from './Api';\nimport { QuestionState, Difficulty } from './Api';\n\ntype AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n}\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n   const [loading, setLoading] = useState(false);\n   const [questions, setQuestions] = useState<QuestionState[]>([]);\n   const [number, setNumber] = useState(0);\n   const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n   const [score, setScore] = useState(0);\n   const [gameOver, setGameOver] = useState(true);\n\n   console.log(fetchQuizQuestions(TOTAL_QUESTIONS,Difficulty.EASY));\n   const startTrivia = async () => {\n        setLoading(true);\n        setGameOver(false);\n  \n   const newQuestions = await fetchQuizQuestions(\n     TOTAL_QUESTIONS,\n     Difficulty.EASY\n   )\n\n   setQuestions(newQuestions);\n   setScore(0);\n   setUserAnswers([]);\n   setNumber(0);\n   setLoading(false);\n  };\n   const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\n   }\n\n   const nextQuestion = () => {\n\n   }\n\n\n  return (\n    <div className=\"App\">\n      <h1>REACT QUIZ</h1>\n      {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n      <button className=\"start\" onClick={startTrivia}>\n        Start\n      </button>\n    ) : null}\n      {!gameOver ? <p className=\"score\">Score:</p> : null}\n      {loading && <p>Loading Questions ...</p>}\n      {!loading && !gameOver &&(\n      <QuestionCard \n       questionNr={number + 1}\n       totalQuestions={TOTAL_QUESTIONS}\n       question={questions[number].question}\n       answers={questions[number].answer}\n       userAnswer={userAnswers ? userAnswers[number] : undefined}\n       callback={checkAnswer        }\n      />\n      )}\n      {!gameOver && ! loading && userAnswers.length === number + 1}\n      <button className=\"next\" onClick={nextQuestion}>\n        Next Question\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}